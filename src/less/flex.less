@import "sources/var.less";

// Mixins
.loop-grid-columns(@index, @prefix) when (@index <= @App--grid-columns) {
  @unprefix: boolean(@prefix = e(''));
  @column: if(@unprefix, ~'col-@{index}', ~'@{prefix}\:col-@{index}');
  @column-offset: if(@unprefix, ~'col-offset-@{index}', ~'@{prefix}\:col-offset-@{index}');

  @value: percentage((@index / @App--grid-columns));

  .@{column} {
    max-width: @value;
    flex: 0 0 @value;
  }

  .@{column-offset} {
    margin-left: @value;
  }

  .loop-grid-columns((@index + 1), @prefix);
}

.make-grid(@breakpoint: ~'') {
  .loop-grid-columns(1, @breakpoint);
}

// Content
.row {
  display: flex;
  flex-flow: row wrap;

  &:before,
  &:after {
    display: flex;
  }

  &-nowrap {
    flex-wrap: nowrap;
  }

  &-justify-start {
    justify-content: flex-start;
  }

  &-justify-center {
    justify-content: center;
  }

  &-justify-end {
    justify-content: flex-end;
  }

  &-justify-space-between {
    justify-content: space-between;
  }

  &-justify-space-around {
    justify-content: space-around;
  }

  &-align-top {
    align-items: flex-start;
  }

  &-align-middle {
    align-items: center;
  }

  &-align-bottom {
    align-items: flex-end;
  }

  &-center {
    justify-content: center;
    align-items: center;
  }
}

.col {
  max-width: 100%;
  flex: 1;
}

.make-grid();

each(@App--grid-breakpoints, {
  @media @value {
    .make-grid(@key);
  }
})
